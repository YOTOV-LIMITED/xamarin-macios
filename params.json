{
  "name": "Xamarin-macios",
  "tagline": "Bridges the worlds of .NET with the native APIs of Mac, iOS, tvOS, and watchOS.",
  "body": "# Xamarin.iOS & Xamarin.Mac #\r\n\r\nThis module is the main repository for both **Xamarin.iOS** and **Xamarin.Mac**.\r\n\r\nThese frameworks allow us to create native iOS, tvOS, watchOS and Mac applications using the same UI controls we would in Objective-C and Xcode, except with the flexibility and elegance of a modern language (C#), the power of the .NET Base Class Library (BCL), and two first-class IDEs&mdash;Xamarin Studio and Visual Studio&mdash;at our fingertips.\r\n\r\n### Continuous Builds ###\r\n\r\nYou can download continuous builds of our main development branches from [our wiki page](https://github.com/xamarin/xamarin-macios/wiki#continuous-builds).\r\n\r\n## Build requirements ##\r\n\r\n* Autoconf, automake and libtool.\r\n\r\n  You can use brew, or [this script](https://gist.github.com/rolfbjarne/3a979187ddd0855da073) to get\r\n  it directly from gnu.org (you'll have to edit your PATH to include /opt/bin if you use the script)\r\n\t\r\n  To install brew and all the tool dependencies:\r\n\r\n      $ ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\r\n      $ brew update\r\n      $ brew install libtool autoconf automake bison flex\r\n\r\n* Xcode\r\n\r\n  To build the Xamarin.iOS and Xamarin.Mac SDKs you need a certain version of Xcode.\r\n  The build will tell you exactly which version you need.\r\n\r\n  You can download the Xcode version you need from [Apple's Developer Center](https://developer.apple.com/downloads/index.action?name=Xcode)\r\n  (requires an Apple Developer account).\r\n\r\n  To ease development with different versions of the SDK that require different versions\r\n  of Xcode, we require Xcode to be in a non-standard location (based on the Xcode version).\r\n\r\n  For example Xcode 7.0 must be installed in /Applications/Xcode7.app.\r\n\r\n  The recommended procedure is to download the corresponding Xcode dmg from Apple's\r\n  Developer Center, extract Xcode.app to your system, _and rename it before\r\n  launching it the first time_. Renaming Xcode.app after having launched it\r\n  once may confuse Xcode, and strange errors start occuring.\r\n\r\n* Mono MDK.\r\n\r\n  The build will tell you if you need to update, and where to get it.\r\n\r\n* Xamarin Studio.\r\n\r\n  The build will tell you if you need to update, and where to get it.\r\n\r\n* You can also provision some of the dependencies with an included script:\r\n\r\n        $ ./system-dependencies.sh --provision-[xcode|xamarin-studio|mono|all]\r\n\r\n##Â Quick build & install ##\r\n\r\nFollow the following steps to build and install Xamarin.iOS and Xamarin.Mac:\r\n\r\n1. Clone this repository and its submodules\r\n\r\n        $ git clone --recursive git@github.com:xamarin/xamarin-macios.git\r\n        $ cd xamarin-macios\r\n\r\n2. Fetch dependencies and build everything\r\n\r\n        $ make world\r\n\r\n3. Make sure permissions are OK to install into system directories (this will ask for your password)\r\n\r\n        $ make fix-install-permissions\r\n\r\n4. Install into the system\r\n\r\n        $ make install-system\r\n\r\n## Configure ##\r\n\r\nThere is a configure script that can optionally be used to configure the build.\r\nBy default, everything required for both Xamarin.iOS and Xamarin.Mac will be built.\r\n\r\n* --disable-mac: Disable Mac-related parts.\r\n* --disable-ios: Disable iOS-related parts.\r\n\r\n    In both cases the resulting build will contain both iOS and Mac bits because:\r\n\r\n    * Parts of the iOS build depends on Mac parts (in particular mtouch uses\r\n      Xamarin.Mac).\r\n\r\n    * The class libraries builds can not be disabled because a very common error\r\n      is to end up with code that only works/builds in either iOS or Mac.\r\n\r\n* --enable-ccache: Enables cached builds with `ccache` (default if `ccache` is found in the path).\r\n* --disable-ccache: Disables cached builds with `ccache`, even if it is present.\r\n* --disable-strip: If executables should be stripped or not. This makes it easier\r\n  to debug native executables using lldb.\r\n* --help: Show the help.\r\n\r\n## Contributing ##\r\n\r\n### Mailing Lists\r\n\r\nTo discuss this project, and participate in the design, we use the [macios-devel@lists.xamarin.com](http://lists.xamarin.com/mailman/listinfo/macios-devel) mailing list.   \r\n\r\n### Chat\r\n\r\nThere is also a gitter chat room that can be used to discuss this project, and participate in the design: \r\n[![Gitter](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/xamarin/xamarin-macios?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\r\n\r\n### Coding Guidelines\r\n\r\nWe use [Mono's Coding Guidelines](http://www.mono-project.com/community/contributing/coding-guidelines/).\r\n\r\n### Reporting Bugs\r\n\r\nWe use [Bugzilla](https://bugzilla.xamarin.com/newbug) to track issues.\r\n\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}